diff -ur libzip-1.7.1-orig/lib/zip_crypto_win.c libzip-1.7.1-fix/lib/zip_crypto_win.c
--- libzip-1.7.1-orig/lib/zip_crypto_win.c	2020-06-13 12:12:26.000000000 +0200
+++ libzip-1.7.1-fix/lib/zip_crypto_win.c	2020-07-11 10:01:29.607141000 +0200
@@ -81,7 +81,7 @@
 */
 
 #if !defined(WINCE) && !defined(__MINGW32__)
-#define HAS_BCRYPTDERIVEKEYPBKDF2
+//#define HAS_BCRYPTDERIVEKEYPBKDF2
 #endif
 
 #ifdef HAS_BCRYPTDERIVEKEYPBKDF2
diff -ur libzip-1.7.1-orig/lib/zip_source_file_win32_named.c libzip-1.7.1-fix/lib/zip_source_file_win32_named.c
--- libzip-1.7.1-orig/lib/zip_source_file_win32_named.c	2020-06-13 12:12:26.000000000 +0200
+++ libzip-1.7.1-fix/lib/zip_source_file_win32_named.c	2020-07-11 10:02:15.956211000 +0200
@@ -64,6 +64,7 @@
 
 static zip_int64_t
 _zip_win32_named_op_commit_write(zip_source_file_context_t *ctx) {
+	DWORD attributes;
     zip_win32_file_operations_t *file_ops = (zip_win32_file_operations_t *)ctx->ops_userdata;
     
     if (!CloseHandle((HANDLE)ctx->fout)) {
@@ -71,7 +72,7 @@
         return -1;
     }
     
-    DWORD attributes = file_ops->get_file_attributes(ctx->tmpname);
+    attributes = file_ops->get_file_attributes(ctx->tmpname);
     if (attributes == INVALID_FILE_ATTRIBUTES) {
         zip_error_set(&ctx->error, ZIP_ER_RENAME, _zip_win32_error_to_errno(GetLastError()));
         return -1;
@@ -242,6 +243,7 @@
 
 static HANDLE
 win32_named_open(zip_source_file_context_t *ctx, const char *name, bool temporary, PSECURITY_ATTRIBUTES security_attributes) {
+	HANDLE h;
     zip_win32_file_operations_t *file_ops = (zip_win32_file_operations_t *)ctx->ops_userdata;
 
     DWORD access = GENERIC_READ;
@@ -256,7 +258,7 @@
         file_attributes = FILE_ATTRIBUTE_NORMAL | FILE_ATTRIBUTE_TEMPORARY;
     }
 
-    HANDLE h = file_ops->create_file(name, access, share_mode, security_attributes, creation_disposition, file_attributes, NULL);
+    h = file_ops->create_file(name, access, share_mode, security_attributes, creation_disposition, file_attributes, NULL);
     
     if (h == INVALID_HANDLE_VALUE) {
         zip_error_set(&ctx->error, ZIP_ER_OPEN, _zip_win32_error_to_errno(GetLastError()));
diff -ur libzip-1.7.1-orig/lib/zip_source_pkware_decode.c libzip-1.7.1-fix/lib/zip_source_pkware_decode.c
--- libzip-1.7.1-orig/lib/zip_source_pkware_decode.c	2020-06-13 12:12:26.000000000 +0200
+++ libzip-1.7.1-fix/lib/zip_source_pkware_decode.c	2020-07-11 10:01:41.347990000 +0200
@@ -82,6 +82,7 @@
     zip_uint8_t header[ZIP_CRYPTO_PKWARE_HEADERLEN];
     struct zip_stat st;
     zip_int64_t n;
+	bool ok;
 
     if ((n = zip_source_read(src, header, ZIP_CRYPTO_PKWARE_HEADERLEN)) < 0) {
 	_zip_error_set_from_source(&ctx->error, src);
@@ -105,7 +106,7 @@
      *  CRC - old PKWare way
      */
 
-    bool ok = false;
+    ok = false;
 
     if (st.valid & ZIP_STAT_MTIME) {
 	unsigned short dostime, dosdate;
