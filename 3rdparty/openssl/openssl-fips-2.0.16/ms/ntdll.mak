# This makefile has been automatically generated from the OpenSSL distribution.
# This single makefile will build the complete OpenSSL distribution and
# by default leave the 'intertesting' output files in .\out and the stuff
# that needs deleting in .\tmp.
# The file was generated by running 'make makefile.one', which
# does a 'make files', which writes all the environment variables from all
# the makefiles to the file call MINFO.  This file is used by
# util\mk1mf.pl to generate makefile.one.
# The 'makefile per directory' system suites me when developing this
# library and also so I can 'distribute' indervidual library sections.
# The one monster makefile better suits building in non-unix
# environments.

INSTALLTOP=D:\__Github__\Windows\compile\scripts\openssl\..\..\..\3rdparty\openssl\openssl-fips-2.0.16\install
OPENSSLDIR=D:\__Github__\Windows\compile\scripts\openssl\..\..\..\3rdparty\openssl\openssl-fips-2.0.16\install\ssl

# Set your compiler options
PLATFORM=VC-WIN32
CC=cl
CFLAG= /MD /Ox /O2 /Ob2 -DOPENSSL_FIPSCANISTER -DOPENSSL_THREADS  -DDSO_WIN32 -W3 -Gs0 -GF -Gy -nologo -DOPENSSL_SYSNAME_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DOPENSSL_USE_APPLINK -I. -DOPENSSL_NO_RC5 -DOPENSSL_NO_MD2 -DOPENSSL_NO_KRB5 -DOPENSSL_FIPS -DOPENSSL_NO_JPAKE -DOPENSSL_NO_STATIC_ENGINE  
APP_CFLAG= /Zi /Fd$(TMP_D)/app
LIB_CFLAG= /Zi /Fd$(TMP_D)/lib -D_WINDLL
SHLIB_CFLAG=
APP_EX_OBJ=setargv.obj $(OBJ_D)\applink.obj /implib:$(TMP_D)\junk.lib
SHLIB_EX_OBJ=
# add extra libraries to this define, for solaris -lsocket -lnsl would
# be added
EX_LIBS=ws2_32.lib gdi32.lib advapi32.lib crypt32.lib user32.lib

# The OpenSSL directory
SRC_D=.

LINK=link
LFLAGS=/nologo /subsystem:console /opt:ref /debug /fixed
RSC=rc
FIPSLINK=$(PERL) util\fipslink.pl

# The output directory for everything intersting
OUT_D=out32dll
# The output directory for all the temporary muck
TMP_D=tmp32dll
# The output directory for the header files
INC_D=inc32
INCO_D=inc32\openssl

PERL=perl
CP=$(PERL) util/copy.pl
CP2=$(PERL) util/copy.pl -stripcr
RM=del /Q
RANLIB=
MKDIR=$(PERL) util/mkdir-p.pl
MKLIB=lib /nologo
MLFLAGS= /nologo /subsystem:console /opt:ref /debug /fixed /dll
ASM=nasm -f win32

# FIPS validated module and support file locations

E_PREMAIN_DSO=fips_premain_dso

FIPSLIB_D=$(LIB_D)
BASEADDR=0xFB00000
FIPS_PREMAIN_SRC=$(LIB_D)\fips_premain.c
O_FIPSCANISTER=$(LIB_D)\fipscanister.lib
FIPS_SHA1_EXE=$(BIN_D)\fips_standalone_sha1.exe
PREMAIN_DSO_EXE=$(BIN_D)\fips_premain_dso.exe

######################################################
# You should not need to touch anything below this point
######################################################

E_EXE=openssl
SSL=ssleay32
CRYPTO=libeay32

# BIN_D  - Binary output directory
# TEST_D - Binary test file output directory
# LIB_D  - library output directory
# ENG_D  - dynamic engine output directory
# Note: if you change these point to different directories then uncomment out
# the lines around the 'NB' comment below.
# 
BIN_D=$(OUT_D)
TEST_D=$(OUT_D)
LIB_D=$(OUT_D)
ENG_D=$(OUT_D)

# INCL_D - local library directory
# OBJ_D  - temp object file directory
OBJ_D=$(TMP_D)
INCL_D=$(TMP_D)

O_SSL=     $(LIB_D)\$(SSL).dll
O_CRYPTO=  $(LIB_D)\$(CRYPTO).dll
SO_SSL=    $(SSL)
SO_CRYPTO= $(CRYPTO)
L_SSL=     $(LIB_D)\$(SSL).lib
L_CRYPTO=  $(LIB_D)\$(CRYPTO).lib

L_LIBS= $(L_SSL) $(L_CRYPTO) 

######################################################
# Don't touch anything below this point
######################################################

INC=-I$(INC_D) -I$(INCL_D)
APP_CFLAGS=$(INC) $(CFLAG) $(APP_CFLAG)
LIB_CFLAGS=$(INC) $(CFLAG) $(LIB_CFLAG)
SHLIB_CFLAGS=$(INC) $(CFLAG) $(LIB_CFLAG) $(SHLIB_CFLAG)
LIBS_DEP=

#############################################
HEADER=$(INCL_D)\e_os.h \
	$(INCL_D)\cryptlib.h $(INCL_D)\buildinf.h $(INCL_D)\md32_common.h \
	$(INCL_D)\o_time.h $(INCL_D)\o_str.h $(INCL_D)\o_dir.h \
	$(INCL_D)\sha_locl.h $(INCL_D)\des_locl.h $(INCL_D)\rpc_des.h \
	$(INCL_D)\spr.h $(INCL_D)\des_ver.h $(INCL_D)\aes_locl.h \
	$(INCL_D)\modes_lcl.h $(INCL_D)\bn_lcl.h $(INCL_D)\bn_prime.h \
	$(INCL_D)\dsa_locl.h $(INCL_D)\ec_lcl.h $(INCL_D)\ech_locl.h \
	$(INCL_D)\ecs_locl.h $(INCL_D)\bio_lcl.h $(INCL_D)\obj_dat.h \
	$(INCL_D)\obj_xref.h $(INCL_D)\evp_locl.h $(INCL_D)\asn1_locl.h \
	$(INCL_D)\ui_locl.h $(INCL_D)\fips_utl.h $(INCL_D)\fips_locl.h \
	$(INCL_D)\fips_auth.h $(INCL_D)\fips_rand_lcl.h $(INCL_D)\fips_drbg_selftest.h 

EXHEADER=$(INCO_D)\e_os2.h \
	$(INCO_D)\crypto.h $(INCO_D)\opensslv.h $(INCO_D)\opensslconf.h \
	$(INCO_D)\ebcdic.h $(INCO_D)\symhacks.h $(INCO_D)\ossl_typ.h \
	$(INCO_D)\sha.h $(INCO_D)\hmac.h $(INCO_D)\des.h \
	$(INCO_D)\des_old.h $(INCO_D)\aes.h $(INCO_D)\modes.h \
	$(INCO_D)\cmac.h $(INCO_D)\bn.h $(INCO_D)\rsa.h \
	$(INCO_D)\dsa.h $(INCO_D)\dh.h $(INCO_D)\ec.h \
	$(INCO_D)\ecdh.h $(INCO_D)\ecdsa.h $(INCO_D)\buffer.h \
	$(INCO_D)\bio.h $(INCO_D)\stack.h $(INCO_D)\safestack.h \
	$(INCO_D)\lhash.h $(INCO_D)\rand.h $(INCO_D)\err.h \
	$(INCO_D)\objects.h $(INCO_D)\obj_mac.h $(INCO_D)\evp.h \
	$(INCO_D)\asn1.h $(INCO_D)\asn1_mac.h $(INCO_D)\asn1t.h \
	$(INCO_D)\engine.h $(INCO_D)\ui.h $(INCO_D)\ui_compat.h \
	$(INCO_D)\fips.h $(INCO_D)\fipssyms.h $(INCO_D)\fips_rand.h 

T_OBJ=$(OBJ_D)\fips_test_suite.obj \
	$(OBJ_D)\fips_aesavs.obj $(OBJ_D)\fips_gcmtest.obj $(OBJ_D)\fips_cmactest.obj \
	$(OBJ_D)\fips_desmovs.obj $(OBJ_D)\fips_dsatest.obj $(OBJ_D)\fips_dssvs.obj \
	$(OBJ_D)\fips_dhvs.obj $(OBJ_D)\fips_ecdhvs.obj $(OBJ_D)\fips_ecdsavs.obj \
	$(OBJ_D)\fips_hmactest.obj $(OBJ_D)\fips_randtest.obj $(OBJ_D)\fips_rngvs.obj \
	$(OBJ_D)\fips_drbgvs.obj $(OBJ_D)\fips_rsavtest.obj $(OBJ_D)\fips_rsastest.obj \
	$(OBJ_D)\fips_rsagtest.obj $(OBJ_D)\fips_shatest.obj 

E_OBJ=

CRYPTOOBJ=$(OBJ_D)\$(CRYPTO).res 

FIPSOBJ=$(OBJ_D)\fips.obj \
	$(OBJ_D)\fips_post.obj $(OBJ_D)\fips_aes_selftest.obj $(OBJ_D)\fips_cmac_selftest.obj \
	$(OBJ_D)\fips_des_selftest.obj $(OBJ_D)\fips_dsa_selftest.obj $(OBJ_D)\fips_dsa_lib.obj \
	$(OBJ_D)\fips_dsa_sign.obj $(OBJ_D)\fips_dh_lib.obj $(OBJ_D)\fips_ecdh_selftest.obj \
	$(OBJ_D)\fips_ecdsa_lib.obj $(OBJ_D)\fips_ecdsa_sign.obj $(OBJ_D)\fips_ecdsa_selftest.obj \
	$(OBJ_D)\fips_hmac_selftest.obj $(OBJ_D)\fips_rand.obj $(OBJ_D)\fips_rand_selftest.obj \
	$(OBJ_D)\fips_drbg_lib.obj $(OBJ_D)\fips_drbg_hash.obj $(OBJ_D)\fips_drbg_hmac.obj \
	$(OBJ_D)\fips_drbg_ctr.obj $(OBJ_D)\fips_drbg_selftest.obj $(OBJ_D)\fips_drbg_rand.obj \
	$(OBJ_D)\fips_rand_lib.obj $(OBJ_D)\fips_rsa_selftest.obj $(OBJ_D)\fips_rsa_sign.obj \
	$(OBJ_D)\fips_rsa_lib.obj $(OBJ_D)\fips_err.obj $(OBJ_D)\fips_md.obj \
	$(OBJ_D)\fips_enc.obj $(OBJ_D)\fips_lck.obj $(OBJ_D)\fips_mem.obj \
	$(OBJ_D)\fips_sha1_selftest.obj $(OBJ_D)\cryptlib.obj $(OBJ_D)\uid.obj \
	$(OBJ_D)\thr_id.obj $(OBJ_D)\x86cpuid.obj $(OBJ_D)\sha1dgst.obj \
	$(OBJ_D)\sha256.obj $(OBJ_D)\sha512.obj $(OBJ_D)\sha1-586.obj \
	$(OBJ_D)\sha256-586.obj $(OBJ_D)\sha512-586.obj $(OBJ_D)\hmac.obj \
	$(OBJ_D)\set_key.obj $(OBJ_D)\ecb3_enc.obj $(OBJ_D)\cfb64enc.obj \
	$(OBJ_D)\cfb64ede.obj $(OBJ_D)\cfb_enc.obj $(OBJ_D)\ofb64ede.obj \
	$(OBJ_D)\des-586.obj $(OBJ_D)\crypt586.obj $(OBJ_D)\fcrypt.obj \
	$(OBJ_D)\aes_ecb.obj $(OBJ_D)\aes_cfb.obj $(OBJ_D)\aes_ofb.obj \
	$(OBJ_D)\aes-586.obj $(OBJ_D)\aesni-x86.obj $(OBJ_D)\cbc128.obj \
	$(OBJ_D)\ctr128.obj $(OBJ_D)\cfb128.obj $(OBJ_D)\ofb128.obj \
	$(OBJ_D)\gcm128.obj $(OBJ_D)\ccm128.obj $(OBJ_D)\xts128.obj \
	$(OBJ_D)\ghash-x86.obj $(OBJ_D)\cmac.obj $(OBJ_D)\bn_add.obj \
	$(OBJ_D)\bn_div.obj $(OBJ_D)\bn_exp.obj $(OBJ_D)\bn_lib.obj \
	$(OBJ_D)\bn_ctx.obj $(OBJ_D)\bn_mul.obj $(OBJ_D)\bn_mod.obj \
	$(OBJ_D)\bn_rand.obj $(OBJ_D)\bn_shift.obj $(OBJ_D)\bn_word.obj \
	$(OBJ_D)\bn_blind.obj $(OBJ_D)\bn_gcd.obj $(OBJ_D)\bn_prime.obj \
	$(OBJ_D)\bn_sqr.obj $(OBJ_D)\bn-586.obj $(OBJ_D)\co-586.obj \
	$(OBJ_D)\x86-mont.obj $(OBJ_D)\x86-gf2m.obj $(OBJ_D)\bn_recp.obj \
	$(OBJ_D)\bn_mont.obj $(OBJ_D)\bn_exp2.obj $(OBJ_D)\bn_gf2m.obj \
	$(OBJ_D)\bn_nist.obj $(OBJ_D)\bn_x931p.obj $(OBJ_D)\rsa_eay.obj \
	$(OBJ_D)\rsa_gen.obj $(OBJ_D)\rsa_pk1.obj $(OBJ_D)\rsa_ssl.obj \
	$(OBJ_D)\rsa_none.obj $(OBJ_D)\rsa_oaep.obj $(OBJ_D)\rsa_pss.obj \
	$(OBJ_D)\rsa_x931.obj $(OBJ_D)\rsa_crpt.obj $(OBJ_D)\rsa_x931g.obj \
	$(OBJ_D)\dsa_gen.obj $(OBJ_D)\dsa_key.obj $(OBJ_D)\dsa_ossl.obj \
	$(OBJ_D)\dh_gen.obj $(OBJ_D)\dh_key.obj $(OBJ_D)\dh_check.obj \
	$(OBJ_D)\ec_lib.obj $(OBJ_D)\ecp_smpl.obj $(OBJ_D)\ecp_mont.obj \
	$(OBJ_D)\ecp_nist.obj $(OBJ_D)\ec_cvt.obj $(OBJ_D)\ec_mult.obj \
	$(OBJ_D)\ec_curve.obj $(OBJ_D)\ec_key.obj $(OBJ_D)\ec2_smpl.obj \
	$(OBJ_D)\ec2_mult.obj $(OBJ_D)\ech_ossl.obj $(OBJ_D)\ech_key.obj \
	$(OBJ_D)\ecs_ossl.obj $(OBJ_D)\buf_str.obj $(OBJ_D)\e_des3.obj \
	$(OBJ_D)\e_aes.obj $(OBJ_D)\m_sha1.obj $(OBJ_D)\m_dss.obj \
	$(OBJ_D)\m_dss1.obj $(OBJ_D)\m_ecdsa.obj $(OBJ_D)\e_null.obj 

T_EXE=$(TEST_D)\fips_test_suite.exe \
	$(TEST_D)\fips_aesavs.exe $(TEST_D)\fips_gcmtest.exe $(TEST_D)\fips_cmactest.exe \
	$(TEST_D)\fips_desmovs.exe $(TEST_D)\fips_dsatest.exe $(TEST_D)\fips_dssvs.exe \
	$(TEST_D)\fips_dhvs.exe $(TEST_D)\fips_ecdhvs.exe $(TEST_D)\fips_ecdsavs.exe \
	$(TEST_D)\fips_hmactest.exe $(TEST_D)\fips_randtest.exe $(TEST_D)\fips_rngvs.exe \
	$(TEST_D)\fips_drbgvs.exe $(TEST_D)\fips_rsavtest.exe $(TEST_D)\fips_rsastest.exe \
	$(TEST_D)\fips_rsagtest.exe $(TEST_D)\fips_shatest.exe 

T_SRC=$(TMP_D)\fips_test_suite.c \
	$(TMP_D)\fips_aesavs.c $(TMP_D)\fips_gcmtest.c $(TMP_D)\fips_cmactest.c \
	$(TMP_D)\fips_desmovs.c $(TMP_D)\fips_dsatest.c $(TMP_D)\fips_dssvs.c \
	$(TMP_D)\fips_dhvs.c $(TMP_D)\fips_ecdhvs.c $(TMP_D)\fips_ecdsavs.c \
	$(TMP_D)\fips_hmactest.c $(TMP_D)\fips_randtest.c $(TMP_D)\fips_rngvs.c \
	$(TMP_D)\fips_drbgvs.c $(TMP_D)\fips_rsavtest.c $(TMP_D)\fips_rsastest.c \
	$(TMP_D)\fips_rsagtest.c $(TMP_D)\fips_shatest.c 

E_SHLIB=

###################################################################
all: banner $(TMP_D) $(BIN_D) $(TEST_D) $(LIB_D) $(INCO_D) headers $(O_FIPSCANISTER)

banner:
	@echo Building OpenSSL

$(OBJ_D)\applink.obj:	ms\applink.c
	$(CC) /Fo$(OBJ_D)\applink.obj $(APP_CFLAGS) -c ms\applink.c
$(OBJ_D)\uplink.obj:	ms\uplink.c ms\applink.c
	$(CC) /Fo$(OBJ_D)\uplink.obj $(SHLIB_CFLAGS) -c ms\uplink.c
$(INCO_D)\applink.c:	ms\applink.c
	$(CP) ms\applink.c $(INCO_D)\applink.c

EXHEADER= $(EXHEADER) $(INCO_D)\applink.c

LIBS_DEP=$(LIBS_DEP) $(OBJ_D)\applink.obj
CRYPTOOBJ=$(OBJ_D)\uplink.obj $(CRYPTOOBJ)


$(TMP_D):
	$(MKDIR) "$(TMP_D)"
# NB: uncomment out these lines if BIN_D, TEST_D and LIB_D are different
#$(BIN_D):
#	$(MKDIR) $(BIN_D)
#
#$(TEST_D):
#	$(MKDIR) $(TEST_D)

$(LIB_D):
	$(MKDIR) "$(LIB_D)"

$(INCO_D): $(INC_D)
	$(MKDIR) "$(INCO_D)"

$(INC_D):
	$(MKDIR) "$(INC_D)"

headers: $(HEADER) $(EXHEADER)
	@

lib: $(LIBS_DEP) $(E_SHLIB)

exe: $(BIN_D)\$(E_EXE).exe

build_tests: $(T_EXE)

build_algvs: $(T_SRC) $(BIN_D)\fips_algvs.exe

install: all
	$(MKDIR) "$(INSTALLTOP)"
	$(MKDIR) "$(INSTALLTOP)\bin"
	$(MKDIR) "$(INSTALLTOP)\include"
	$(MKDIR) "$(INSTALLTOP)\include\openssl"
	$(MKDIR) "$(INSTALLTOP)\lib"
	$(CP) "$(O_FIPSCANISTER)" "$(INSTALLTOP)\lib"
	$(CP) "$(O_FIPSCANISTER).sha1" "$(INSTALLTOP)\lib"
	$(CP2) "fips\fips_premain.c" "$(INSTALLTOP)\lib"
	$(CP) "fips\fips_premain.c.sha1" "$(INSTALLTOP)\lib"
	$(CP) "$(INCO_D)\fips.h" "$(INSTALLTOP)\include\openssl"
	$(CP) "$(INCO_D)\fips_rand.h" "$(INSTALLTOP)\include\openssl"
	$(CP) "util\fipslink.pl" "$(INSTALLTOP)\bin"
	$(CP) "$(BIN_D)\fips_standalone_sha1.exe" "$(INSTALLTOP)\bin"



test: $(T_EXE)
	cd $(BIN_D)
	..\ms\test

clean:
	$(RM) $(TMP_D)\*.*

vclean:
	$(RM) $(TMP_D)\*.*
	$(RM) $(OUT_D)\*.*

$(INCL_D)\e_os.h: $(SRC_D)\.\e_os.h
	$(CP) "$(SRC_D)\.\e_os.h" "$(INCL_D)\e_os.h"

$(INCL_D)\cryptlib.h: $(SRC_D)\crypto\cryptlib.h
	$(CP) "$(SRC_D)\crypto\cryptlib.h" "$(INCL_D)\cryptlib.h"

$(INCL_D)\buildinf.h: $(SRC_D)\crypto\buildinf.h
	$(CP) "$(SRC_D)\crypto\buildinf.h" "$(INCL_D)\buildinf.h"

$(INCL_D)\md32_common.h: $(SRC_D)\crypto\md32_common.h
	$(CP) "$(SRC_D)\crypto\md32_common.h" "$(INCL_D)\md32_common.h"

$(INCL_D)\o_time.h: $(SRC_D)\crypto\o_time.h
	$(CP) "$(SRC_D)\crypto\o_time.h" "$(INCL_D)\o_time.h"

$(INCL_D)\o_str.h: $(SRC_D)\crypto\o_str.h
	$(CP) "$(SRC_D)\crypto\o_str.h" "$(INCL_D)\o_str.h"

$(INCL_D)\o_dir.h: $(SRC_D)\crypto\o_dir.h
	$(CP) "$(SRC_D)\crypto\o_dir.h" "$(INCL_D)\o_dir.h"

$(INCL_D)\sha_locl.h: $(SRC_D)\crypto\sha\sha_locl.h
	$(CP) "$(SRC_D)\crypto\sha\sha_locl.h" "$(INCL_D)\sha_locl.h"

$(INCL_D)\des_locl.h: $(SRC_D)\crypto\des\des_locl.h
	$(CP) "$(SRC_D)\crypto\des\des_locl.h" "$(INCL_D)\des_locl.h"

$(INCL_D)\rpc_des.h: $(SRC_D)\crypto\des\rpc_des.h
	$(CP) "$(SRC_D)\crypto\des\rpc_des.h" "$(INCL_D)\rpc_des.h"

$(INCL_D)\spr.h: $(SRC_D)\crypto\des\spr.h
	$(CP) "$(SRC_D)\crypto\des\spr.h" "$(INCL_D)\spr.h"

$(INCL_D)\des_ver.h: $(SRC_D)\crypto\des\des_ver.h
	$(CP) "$(SRC_D)\crypto\des\des_ver.h" "$(INCL_D)\des_ver.h"

$(INCL_D)\aes_locl.h: $(SRC_D)\crypto\aes\aes_locl.h
	$(CP) "$(SRC_D)\crypto\aes\aes_locl.h" "$(INCL_D)\aes_locl.h"

$(INCL_D)\modes_lcl.h: $(SRC_D)\crypto\modes\modes_lcl.h
	$(CP) "$(SRC_D)\crypto\modes\modes_lcl.h" "$(INCL_D)\modes_lcl.h"

$(INCL_D)\bn_lcl.h: $(SRC_D)\crypto\bn\bn_lcl.h
	$(CP) "$(SRC_D)\crypto\bn\bn_lcl.h" "$(INCL_D)\bn_lcl.h"

$(INCL_D)\bn_prime.h: $(SRC_D)\crypto\bn\bn_prime.h
	$(CP) "$(SRC_D)\crypto\bn\bn_prime.h" "$(INCL_D)\bn_prime.h"

$(INCL_D)\dsa_locl.h: $(SRC_D)\crypto\dsa\dsa_locl.h
	$(CP) "$(SRC_D)\crypto\dsa\dsa_locl.h" "$(INCL_D)\dsa_locl.h"

$(INCL_D)\ec_lcl.h: $(SRC_D)\crypto\ec\ec_lcl.h
	$(CP) "$(SRC_D)\crypto\ec\ec_lcl.h" "$(INCL_D)\ec_lcl.h"

$(INCL_D)\ech_locl.h: $(SRC_D)\crypto\ecdh\ech_locl.h
	$(CP) "$(SRC_D)\crypto\ecdh\ech_locl.h" "$(INCL_D)\ech_locl.h"

$(INCL_D)\ecs_locl.h: $(SRC_D)\crypto\ecdsa\ecs_locl.h
	$(CP) "$(SRC_D)\crypto\ecdsa\ecs_locl.h" "$(INCL_D)\ecs_locl.h"

$(INCL_D)\bio_lcl.h: $(SRC_D)\crypto\bio\bio_lcl.h
	$(CP) "$(SRC_D)\crypto\bio\bio_lcl.h" "$(INCL_D)\bio_lcl.h"

$(INCL_D)\obj_dat.h: $(SRC_D)\crypto\objects\obj_dat.h
	$(CP) "$(SRC_D)\crypto\objects\obj_dat.h" "$(INCL_D)\obj_dat.h"

$(INCL_D)\obj_xref.h: $(SRC_D)\crypto\objects\obj_xref.h
	$(CP) "$(SRC_D)\crypto\objects\obj_xref.h" "$(INCL_D)\obj_xref.h"

$(INCL_D)\evp_locl.h: $(SRC_D)\crypto\evp\evp_locl.h
	$(CP) "$(SRC_D)\crypto\evp\evp_locl.h" "$(INCL_D)\evp_locl.h"

$(INCL_D)\asn1_locl.h: $(SRC_D)\crypto\asn1\asn1_locl.h
	$(CP) "$(SRC_D)\crypto\asn1\asn1_locl.h" "$(INCL_D)\asn1_locl.h"

$(INCL_D)\ui_locl.h: $(SRC_D)\crypto\ui\ui_locl.h
	$(CP) "$(SRC_D)\crypto\ui\ui_locl.h" "$(INCL_D)\ui_locl.h"

$(INCL_D)\fips_utl.h: $(SRC_D)\fips\fips_utl.h
	$(CP) "$(SRC_D)\fips\fips_utl.h" "$(INCL_D)\fips_utl.h"

$(INCL_D)\fips_locl.h: $(SRC_D)\fips\fips_locl.h
	$(CP) "$(SRC_D)\fips\fips_locl.h" "$(INCL_D)\fips_locl.h"

$(INCL_D)\fips_auth.h: $(SRC_D)\fips\fips_auth.h
	$(CP) "$(SRC_D)\fips\fips_auth.h" "$(INCL_D)\fips_auth.h"

$(INCL_D)\fips_rand_lcl.h: $(SRC_D)\fips\rand\fips_rand_lcl.h
	$(CP) "$(SRC_D)\fips\rand\fips_rand_lcl.h" "$(INCL_D)\fips_rand_lcl.h"

$(INCL_D)\fips_drbg_selftest.h: $(SRC_D)\fips\rand\fips_drbg_selftest.h
	$(CP) "$(SRC_D)\fips\rand\fips_drbg_selftest.h" "$(INCL_D)\fips_drbg_selftest.h"

$(INCO_D)\e_os2.h: $(SRC_D)\.\e_os2.h
	$(CP) "$(SRC_D)\.\e_os2.h" "$(INCO_D)\e_os2.h"

$(INCO_D)\crypto.h: $(SRC_D)\crypto\crypto.h
	$(CP) "$(SRC_D)\crypto\crypto.h" "$(INCO_D)\crypto.h"

$(INCO_D)\opensslv.h: $(SRC_D)\crypto\opensslv.h
	$(CP) "$(SRC_D)\crypto\opensslv.h" "$(INCO_D)\opensslv.h"

$(INCO_D)\opensslconf.h: $(SRC_D)\crypto\opensslconf.h
	$(CP) "$(SRC_D)\crypto\opensslconf.h" "$(INCO_D)\opensslconf.h"

$(INCO_D)\ebcdic.h: $(SRC_D)\crypto\ebcdic.h
	$(CP) "$(SRC_D)\crypto\ebcdic.h" "$(INCO_D)\ebcdic.h"

$(INCO_D)\symhacks.h: $(SRC_D)\crypto\symhacks.h
	$(CP) "$(SRC_D)\crypto\symhacks.h" "$(INCO_D)\symhacks.h"

$(INCO_D)\ossl_typ.h: $(SRC_D)\crypto\ossl_typ.h
	$(CP) "$(SRC_D)\crypto\ossl_typ.h" "$(INCO_D)\ossl_typ.h"

$(INCO_D)\sha.h: $(SRC_D)\crypto\sha\sha.h
	$(CP) "$(SRC_D)\crypto\sha\sha.h" "$(INCO_D)\sha.h"

$(INCO_D)\hmac.h: $(SRC_D)\crypto\hmac\hmac.h
	$(CP) "$(SRC_D)\crypto\hmac\hmac.h" "$(INCO_D)\hmac.h"

$(INCO_D)\des.h: $(SRC_D)\crypto\des\des.h
	$(CP) "$(SRC_D)\crypto\des\des.h" "$(INCO_D)\des.h"

$(INCO_D)\des_old.h: $(SRC_D)\crypto\des\des_old.h
	$(CP) "$(SRC_D)\crypto\des\des_old.h" "$(INCO_D)\des_old.h"

$(INCO_D)\aes.h: $(SRC_D)\crypto\aes\aes.h
	$(CP) "$(SRC_D)\crypto\aes\aes.h" "$(INCO_D)\aes.h"

$(INCO_D)\modes.h: $(SRC_D)\crypto\modes\modes.h
	$(CP) "$(SRC_D)\crypto\modes\modes.h" "$(INCO_D)\modes.h"

$(INCO_D)\cmac.h: $(SRC_D)\crypto\cmac\cmac.h
	$(CP) "$(SRC_D)\crypto\cmac\cmac.h" "$(INCO_D)\cmac.h"

$(INCO_D)\bn.h: $(SRC_D)\crypto\bn\bn.h
	$(CP) "$(SRC_D)\crypto\bn\bn.h" "$(INCO_D)\bn.h"

$(INCO_D)\rsa.h: $(SRC_D)\crypto\rsa\rsa.h
	$(CP) "$(SRC_D)\crypto\rsa\rsa.h" "$(INCO_D)\rsa.h"

$(INCO_D)\dsa.h: $(SRC_D)\crypto\dsa\dsa.h
	$(CP) "$(SRC_D)\crypto\dsa\dsa.h" "$(INCO_D)\dsa.h"

$(INCO_D)\dh.h: $(SRC_D)\crypto\dh\dh.h
	$(CP) "$(SRC_D)\crypto\dh\dh.h" "$(INCO_D)\dh.h"

$(INCO_D)\ec.h: $(SRC_D)\crypto\ec\ec.h
	$(CP) "$(SRC_D)\crypto\ec\ec.h" "$(INCO_D)\ec.h"

$(INCO_D)\ecdh.h: $(SRC_D)\crypto\ecdh\ecdh.h
	$(CP) "$(SRC_D)\crypto\ecdh\ecdh.h" "$(INCO_D)\ecdh.h"

$(INCO_D)\ecdsa.h: $(SRC_D)\crypto\ecdsa\ecdsa.h
	$(CP) "$(SRC_D)\crypto\ecdsa\ecdsa.h" "$(INCO_D)\ecdsa.h"

$(INCO_D)\buffer.h: $(SRC_D)\crypto\buffer\buffer.h
	$(CP) "$(SRC_D)\crypto\buffer\buffer.h" "$(INCO_D)\buffer.h"

$(INCO_D)\bio.h: $(SRC_D)\crypto\bio\bio.h
	$(CP) "$(SRC_D)\crypto\bio\bio.h" "$(INCO_D)\bio.h"

$(INCO_D)\stack.h: $(SRC_D)\crypto\stack\stack.h
	$(CP) "$(SRC_D)\crypto\stack\stack.h" "$(INCO_D)\stack.h"

$(INCO_D)\safestack.h: $(SRC_D)\crypto\stack\safestack.h
	$(CP) "$(SRC_D)\crypto\stack\safestack.h" "$(INCO_D)\safestack.h"

$(INCO_D)\lhash.h: $(SRC_D)\crypto\lhash\lhash.h
	$(CP) "$(SRC_D)\crypto\lhash\lhash.h" "$(INCO_D)\lhash.h"

$(INCO_D)\rand.h: $(SRC_D)\crypto\rand\rand.h
	$(CP) "$(SRC_D)\crypto\rand\rand.h" "$(INCO_D)\rand.h"

$(INCO_D)\err.h: $(SRC_D)\crypto\err\err.h
	$(CP) "$(SRC_D)\crypto\err\err.h" "$(INCO_D)\err.h"

$(INCO_D)\objects.h: $(SRC_D)\crypto\objects\objects.h
	$(CP) "$(SRC_D)\crypto\objects\objects.h" "$(INCO_D)\objects.h"

$(INCO_D)\obj_mac.h: $(SRC_D)\crypto\objects\obj_mac.h
	$(CP) "$(SRC_D)\crypto\objects\obj_mac.h" "$(INCO_D)\obj_mac.h"

$(INCO_D)\evp.h: $(SRC_D)\crypto\evp\evp.h
	$(CP) "$(SRC_D)\crypto\evp\evp.h" "$(INCO_D)\evp.h"

$(INCO_D)\asn1.h: $(SRC_D)\crypto\asn1\asn1.h
	$(CP) "$(SRC_D)\crypto\asn1\asn1.h" "$(INCO_D)\asn1.h"

$(INCO_D)\asn1_mac.h: $(SRC_D)\crypto\asn1\asn1_mac.h
	$(CP) "$(SRC_D)\crypto\asn1\asn1_mac.h" "$(INCO_D)\asn1_mac.h"

$(INCO_D)\asn1t.h: $(SRC_D)\crypto\asn1\asn1t.h
	$(CP) "$(SRC_D)\crypto\asn1\asn1t.h" "$(INCO_D)\asn1t.h"

$(INCO_D)\engine.h: $(SRC_D)\crypto\engine\engine.h
	$(CP) "$(SRC_D)\crypto\engine\engine.h" "$(INCO_D)\engine.h"

$(INCO_D)\ui.h: $(SRC_D)\crypto\ui\ui.h
	$(CP) "$(SRC_D)\crypto\ui\ui.h" "$(INCO_D)\ui.h"

$(INCO_D)\ui_compat.h: $(SRC_D)\crypto\ui\ui_compat.h
	$(CP) "$(SRC_D)\crypto\ui\ui_compat.h" "$(INCO_D)\ui_compat.h"

$(INCO_D)\fips.h: $(SRC_D)\fips\fips.h
	$(CP) "$(SRC_D)\fips\fips.h" "$(INCO_D)\fips.h"

$(INCO_D)\fipssyms.h: $(SRC_D)\fips\fipssyms.h
	$(CP) "$(SRC_D)\fips\fipssyms.h" "$(INCO_D)\fipssyms.h"

$(INCO_D)\fips_rand.h: $(SRC_D)\fips\rand\fips_rand.h
	$(CP) "$(SRC_D)\fips\rand\fips_rand.h" "$(INCO_D)\fips_rand.h"

$(OBJ_D)\fips_test_suite.obj: $(SRC_D)\fips\fips_test_suite.c
	$(CC) /Fo$(OBJ_D)\fips_test_suite.obj $(APP_CFLAGS) -c $(SRC_D)\fips\fips_test_suite.c

$(OBJ_D)\fips_aesavs.obj: $(SRC_D)\fips\aes\fips_aesavs.c
	$(CC) /Fo$(OBJ_D)\fips_aesavs.obj $(APP_CFLAGS) -c $(SRC_D)\fips\aes\fips_aesavs.c

$(OBJ_D)\fips_gcmtest.obj: $(SRC_D)\fips\aes\fips_gcmtest.c
	$(CC) /Fo$(OBJ_D)\fips_gcmtest.obj $(APP_CFLAGS) -c $(SRC_D)\fips\aes\fips_gcmtest.c

$(OBJ_D)\fips_cmactest.obj: $(SRC_D)\fips\cmac\fips_cmactest.c
	$(CC) /Fo$(OBJ_D)\fips_cmactest.obj $(APP_CFLAGS) -c $(SRC_D)\fips\cmac\fips_cmactest.c

$(OBJ_D)\fips_desmovs.obj: $(SRC_D)\fips\des\fips_desmovs.c
	$(CC) /Fo$(OBJ_D)\fips_desmovs.obj $(APP_CFLAGS) -c $(SRC_D)\fips\des\fips_desmovs.c

$(OBJ_D)\fips_dsatest.obj: $(SRC_D)\fips\dsa\fips_dsatest.c
	$(CC) /Fo$(OBJ_D)\fips_dsatest.obj $(APP_CFLAGS) -c $(SRC_D)\fips\dsa\fips_dsatest.c

$(OBJ_D)\fips_dssvs.obj: $(SRC_D)\fips\dsa\fips_dssvs.c
	$(CC) /Fo$(OBJ_D)\fips_dssvs.obj $(APP_CFLAGS) -c $(SRC_D)\fips\dsa\fips_dssvs.c

$(OBJ_D)\fips_dhvs.obj: $(SRC_D)\fips\dh\fips_dhvs.c
	$(CC) /Fo$(OBJ_D)\fips_dhvs.obj $(APP_CFLAGS) -c $(SRC_D)\fips\dh\fips_dhvs.c

$(OBJ_D)\fips_ecdhvs.obj: $(SRC_D)\fips\ecdh\fips_ecdhvs.c
	$(CC) /Fo$(OBJ_D)\fips_ecdhvs.obj $(APP_CFLAGS) -c $(SRC_D)\fips\ecdh\fips_ecdhvs.c

$(OBJ_D)\fips_ecdsavs.obj: $(SRC_D)\fips\ecdsa\fips_ecdsavs.c
	$(CC) /Fo$(OBJ_D)\fips_ecdsavs.obj $(APP_CFLAGS) -c $(SRC_D)\fips\ecdsa\fips_ecdsavs.c

$(OBJ_D)\fips_hmactest.obj: $(SRC_D)\fips\hmac\fips_hmactest.c
	$(CC) /Fo$(OBJ_D)\fips_hmactest.obj $(APP_CFLAGS) -c $(SRC_D)\fips\hmac\fips_hmactest.c

$(OBJ_D)\fips_randtest.obj: $(SRC_D)\fips\rand\fips_randtest.c
	$(CC) /Fo$(OBJ_D)\fips_randtest.obj $(APP_CFLAGS) -c $(SRC_D)\fips\rand\fips_randtest.c

$(OBJ_D)\fips_rngvs.obj: $(SRC_D)\fips\rand\fips_rngvs.c
	$(CC) /Fo$(OBJ_D)\fips_rngvs.obj $(APP_CFLAGS) -c $(SRC_D)\fips\rand\fips_rngvs.c

$(OBJ_D)\fips_drbgvs.obj: $(SRC_D)\fips\rand\fips_drbgvs.c
	$(CC) /Fo$(OBJ_D)\fips_drbgvs.obj $(APP_CFLAGS) -c $(SRC_D)\fips\rand\fips_drbgvs.c

$(OBJ_D)\fips_rsavtest.obj: $(SRC_D)\fips\rsa\fips_rsavtest.c
	$(CC) /Fo$(OBJ_D)\fips_rsavtest.obj $(APP_CFLAGS) -c $(SRC_D)\fips\rsa\fips_rsavtest.c

$(OBJ_D)\fips_rsastest.obj: $(SRC_D)\fips\rsa\fips_rsastest.c
	$(CC) /Fo$(OBJ_D)\fips_rsastest.obj $(APP_CFLAGS) -c $(SRC_D)\fips\rsa\fips_rsastest.c

$(OBJ_D)\fips_rsagtest.obj: $(SRC_D)\fips\rsa\fips_rsagtest.c
	$(CC) /Fo$(OBJ_D)\fips_rsagtest.obj $(APP_CFLAGS) -c $(SRC_D)\fips\rsa\fips_rsagtest.c

$(OBJ_D)\fips_shatest.obj: $(SRC_D)\fips\sha\fips_shatest.c
	$(CC) /Fo$(OBJ_D)\fips_shatest.obj $(APP_CFLAGS) -c $(SRC_D)\fips\sha\fips_shatest.c

$(OBJ_D)\fips_start.obj: $(SRC_D)\fips\fips_canister.c
	$(CC) /Fo$(OBJ_D)\fips_start.obj -DFIPS_START $(SHLIB_CFLAGS) -c $(SRC_D)\fips\fips_canister.c

$(OBJ_D)\fips_end.obj: $(SRC_D)\fips\fips_canister.c
	$(CC) /Fo$(OBJ_D)\fips_end.obj $(SHLIB_CFLAGS) -c $(SRC_D)\fips\fips_canister.c

$(OBJ_D)\fips_standalone_sha1.obj: $(SRC_D)\fips\sha\fips_standalone_sha1.c
	$(CC) /Fo$(OBJ_D)\fips_standalone_sha1.obj $(SHLIB_CFLAGS) -c $(SRC_D)\fips\sha\fips_standalone_sha1.c

$(OBJ_D)\$(E_PREMAIN_DSO).obj: $(SRC_D)\fips\fips_premain.c
	$(CC) /Fo$(OBJ_D)\$(E_PREMAIN_DSO).obj -DFINGERPRINT_PREMAIN_DSO_LOAD $(SHLIB_CFLAGS) -c $(SRC_D)\fips\fips_premain.c

$(OBJ_D)\fips_algvs.obj: $(SRC_D)\test\fips_algvs.c
	$(CC) /Fo$(OBJ_D)\fips_algvs.obj $(SHLIB_CFLAGS) -c $(SRC_D)\test\fips_algvs.c

$(OBJ_D)\fips.obj: $(SRC_D)\fips\fips.c
	$(CC) /Fo$(OBJ_D)\fips.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\fips.c

$(OBJ_D)\fips_post.obj: $(SRC_D)\fips\fips_post.c
	$(CC) /Fo$(OBJ_D)\fips_post.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\fips_post.c

$(OBJ_D)\fips_aes_selftest.obj: $(SRC_D)\fips\aes\fips_aes_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_aes_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\aes\fips_aes_selftest.c

$(OBJ_D)\fips_cmac_selftest.obj: $(SRC_D)\fips\cmac\fips_cmac_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_cmac_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\cmac\fips_cmac_selftest.c

$(OBJ_D)\fips_des_selftest.obj: $(SRC_D)\fips\des\fips_des_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_des_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\des\fips_des_selftest.c

$(OBJ_D)\fips_dsa_selftest.obj: $(SRC_D)\fips\dsa\fips_dsa_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_dsa_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\dsa\fips_dsa_selftest.c

$(OBJ_D)\fips_dsa_lib.obj: $(SRC_D)\fips\dsa\fips_dsa_lib.c
	$(CC) /Fo$(OBJ_D)\fips_dsa_lib.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\dsa\fips_dsa_lib.c

$(OBJ_D)\fips_dsa_sign.obj: $(SRC_D)\fips\dsa\fips_dsa_sign.c
	$(CC) /Fo$(OBJ_D)\fips_dsa_sign.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\dsa\fips_dsa_sign.c

$(OBJ_D)\fips_dh_lib.obj: $(SRC_D)\fips\dh\fips_dh_lib.c
	$(CC) /Fo$(OBJ_D)\fips_dh_lib.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\dh\fips_dh_lib.c

$(OBJ_D)\fips_ecdh_selftest.obj: $(SRC_D)\fips\ecdh\fips_ecdh_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_ecdh_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\ecdh\fips_ecdh_selftest.c

$(OBJ_D)\fips_ecdsa_lib.obj: $(SRC_D)\fips\ecdsa\fips_ecdsa_lib.c
	$(CC) /Fo$(OBJ_D)\fips_ecdsa_lib.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\ecdsa\fips_ecdsa_lib.c

$(OBJ_D)\fips_ecdsa_sign.obj: $(SRC_D)\fips\ecdsa\fips_ecdsa_sign.c
	$(CC) /Fo$(OBJ_D)\fips_ecdsa_sign.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\ecdsa\fips_ecdsa_sign.c

$(OBJ_D)\fips_ecdsa_selftest.obj: $(SRC_D)\fips\ecdsa\fips_ecdsa_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_ecdsa_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\ecdsa\fips_ecdsa_selftest.c

$(OBJ_D)\fips_hmac_selftest.obj: $(SRC_D)\fips\hmac\fips_hmac_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_hmac_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\hmac\fips_hmac_selftest.c

$(OBJ_D)\fips_rand.obj: $(SRC_D)\fips\rand\fips_rand.c
	$(CC) /Fo$(OBJ_D)\fips_rand.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rand\fips_rand.c

$(OBJ_D)\fips_rand_selftest.obj: $(SRC_D)\fips\rand\fips_rand_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_rand_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rand\fips_rand_selftest.c

$(OBJ_D)\fips_drbg_lib.obj: $(SRC_D)\fips\rand\fips_drbg_lib.c
	$(CC) /Fo$(OBJ_D)\fips_drbg_lib.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rand\fips_drbg_lib.c

$(OBJ_D)\fips_drbg_hash.obj: $(SRC_D)\fips\rand\fips_drbg_hash.c
	$(CC) /Fo$(OBJ_D)\fips_drbg_hash.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rand\fips_drbg_hash.c

$(OBJ_D)\fips_drbg_hmac.obj: $(SRC_D)\fips\rand\fips_drbg_hmac.c
	$(CC) /Fo$(OBJ_D)\fips_drbg_hmac.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rand\fips_drbg_hmac.c

$(OBJ_D)\fips_drbg_ctr.obj: $(SRC_D)\fips\rand\fips_drbg_ctr.c
	$(CC) /Fo$(OBJ_D)\fips_drbg_ctr.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rand\fips_drbg_ctr.c

$(OBJ_D)\fips_drbg_selftest.obj: $(SRC_D)\fips\rand\fips_drbg_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_drbg_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rand\fips_drbg_selftest.c

$(OBJ_D)\fips_drbg_rand.obj: $(SRC_D)\fips\rand\fips_drbg_rand.c
	$(CC) /Fo$(OBJ_D)\fips_drbg_rand.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rand\fips_drbg_rand.c

$(OBJ_D)\fips_rand_lib.obj: $(SRC_D)\fips\rand\fips_rand_lib.c
	$(CC) /Fo$(OBJ_D)\fips_rand_lib.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rand\fips_rand_lib.c

$(OBJ_D)\fips_rsa_selftest.obj: $(SRC_D)\fips\rsa\fips_rsa_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_rsa_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rsa\fips_rsa_selftest.c

$(OBJ_D)\fips_rsa_sign.obj: $(SRC_D)\fips\rsa\fips_rsa_sign.c
	$(CC) /Fo$(OBJ_D)\fips_rsa_sign.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rsa\fips_rsa_sign.c

$(OBJ_D)\fips_rsa_lib.obj: $(SRC_D)\fips\rsa\fips_rsa_lib.c
	$(CC) /Fo$(OBJ_D)\fips_rsa_lib.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\rsa\fips_rsa_lib.c

$(OBJ_D)\fips_err.obj: $(SRC_D)\fips\utl\fips_err.c
	$(CC) /Fo$(OBJ_D)\fips_err.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\utl\fips_err.c

$(OBJ_D)\fips_md.obj: $(SRC_D)\fips\utl\fips_md.c
	$(CC) /Fo$(OBJ_D)\fips_md.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\utl\fips_md.c

$(OBJ_D)\fips_enc.obj: $(SRC_D)\fips\utl\fips_enc.c
	$(CC) /Fo$(OBJ_D)\fips_enc.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\utl\fips_enc.c

$(OBJ_D)\fips_lck.obj: $(SRC_D)\fips\utl\fips_lck.c
	$(CC) /Fo$(OBJ_D)\fips_lck.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\utl\fips_lck.c

$(OBJ_D)\fips_mem.obj: $(SRC_D)\fips\utl\fips_mem.c
	$(CC) /Fo$(OBJ_D)\fips_mem.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\utl\fips_mem.c

$(OBJ_D)\fips_sha1_selftest.obj: $(SRC_D)\fips\sha\fips_sha1_selftest.c
	$(CC) /Fo$(OBJ_D)\fips_sha1_selftest.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\fips\sha\fips_sha1_selftest.c

$(OBJ_D)\cryptlib.obj: $(SRC_D)\crypto\cryptlib.c
	$(CC) /Fo$(OBJ_D)\cryptlib.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\cryptlib.c

$(OBJ_D)\uid.obj: $(SRC_D)\crypto\uid.c
	$(CC) /Fo$(OBJ_D)\uid.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\uid.c

$(OBJ_D)\thr_id.obj: $(SRC_D)\crypto\thr_id.c
	$(CC) /Fo$(OBJ_D)\thr_id.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\thr_id.c

$(TMP_D)\x86cpuid.asm: crypto\x86cpuid.pl
	$(PERL) crypto\x86cpuid.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\x86cpuid.obj: $(TMP_D)\x86cpuid.asm
	$(ASM) -o $@ $(TMP_D)\x86cpuid.asm

$(OBJ_D)\sha1dgst.obj: $(SRC_D)\crypto\sha\sha1dgst.c
	$(CC) /Fo$(OBJ_D)\sha1dgst.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\sha\sha1dgst.c

$(OBJ_D)\sha256.obj: $(SRC_D)\crypto\sha\sha256.c
	$(CC) /Fo$(OBJ_D)\sha256.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\sha\sha256.c

$(OBJ_D)\sha512.obj: $(SRC_D)\crypto\sha\sha512.c
	$(CC) /Fo$(OBJ_D)\sha512.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\sha\sha512.c

$(TMP_D)\sha1-586.asm: crypto\sha\asm\sha1-586.pl
	$(PERL) crypto\sha\asm\sha1-586.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\sha1-586.obj: $(TMP_D)\sha1-586.asm
	$(ASM) -o $@ $(TMP_D)\sha1-586.asm

$(TMP_D)\sha256-586.asm: crypto\sha\asm\sha256-586.pl
	$(PERL) crypto\sha\asm\sha256-586.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\sha256-586.obj: $(TMP_D)\sha256-586.asm
	$(ASM) -o $@ $(TMP_D)\sha256-586.asm

$(TMP_D)\sha512-586.asm: crypto\sha\asm\sha512-586.pl
	$(PERL) crypto\sha\asm\sha512-586.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\sha512-586.obj: $(TMP_D)\sha512-586.asm
	$(ASM) -o $@ $(TMP_D)\sha512-586.asm

$(OBJ_D)\hmac.obj: $(SRC_D)\crypto\hmac\hmac.c
	$(CC) /Fo$(OBJ_D)\hmac.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\hmac\hmac.c

$(OBJ_D)\set_key.obj: $(SRC_D)\crypto\des\set_key.c
	$(CC) /Fo$(OBJ_D)\set_key.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\des\set_key.c

$(OBJ_D)\ecb3_enc.obj: $(SRC_D)\crypto\des\ecb3_enc.c
	$(CC) /Fo$(OBJ_D)\ecb3_enc.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\des\ecb3_enc.c

$(OBJ_D)\cfb64enc.obj: $(SRC_D)\crypto\des\cfb64enc.c
	$(CC) /Fo$(OBJ_D)\cfb64enc.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\des\cfb64enc.c

$(OBJ_D)\cfb64ede.obj: $(SRC_D)\crypto\des\cfb64ede.c
	$(CC) /Fo$(OBJ_D)\cfb64ede.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\des\cfb64ede.c

$(OBJ_D)\cfb_enc.obj: $(SRC_D)\crypto\des\cfb_enc.c
	$(CC) /Fo$(OBJ_D)\cfb_enc.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\des\cfb_enc.c

$(OBJ_D)\ofb64ede.obj: $(SRC_D)\crypto\des\ofb64ede.c
	$(CC) /Fo$(OBJ_D)\ofb64ede.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\des\ofb64ede.c

$(TMP_D)\des-586.asm: crypto\des\asm\des-586.pl
	$(PERL) crypto\des\asm\des-586.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\des-586.obj: $(TMP_D)\des-586.asm
	$(ASM) -o $@ $(TMP_D)\des-586.asm

$(TMP_D)\crypt586.asm: crypto\des\asm\crypt586.pl
	$(PERL) crypto\des\asm\crypt586.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\crypt586.obj: $(TMP_D)\crypt586.asm
	$(ASM) -o $@ $(TMP_D)\crypt586.asm

$(OBJ_D)\fcrypt.obj: $(SRC_D)\crypto\des\fcrypt.c
	$(CC) /Fo$(OBJ_D)\fcrypt.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\des\fcrypt.c

$(OBJ_D)\aes_ecb.obj: $(SRC_D)\crypto\aes\aes_ecb.c
	$(CC) /Fo$(OBJ_D)\aes_ecb.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\aes\aes_ecb.c

$(OBJ_D)\aes_cfb.obj: $(SRC_D)\crypto\aes\aes_cfb.c
	$(CC) /Fo$(OBJ_D)\aes_cfb.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\aes\aes_cfb.c

$(OBJ_D)\aes_ofb.obj: $(SRC_D)\crypto\aes\aes_ofb.c
	$(CC) /Fo$(OBJ_D)\aes_ofb.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\aes\aes_ofb.c

$(TMP_D)\aes-586.asm: crypto\aes\asm\aes-586.pl
	$(PERL) crypto\aes\asm\aes-586.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\aes-586.obj: $(TMP_D)\aes-586.asm
	$(ASM) -o $@ $(TMP_D)\aes-586.asm

$(TMP_D)\aesni-x86.asm: crypto\aes\asm\aesni-x86.pl
	$(PERL) crypto\aes\asm\aesni-x86.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\aesni-x86.obj: $(TMP_D)\aesni-x86.asm
	$(ASM) -o $@ $(TMP_D)\aesni-x86.asm

$(OBJ_D)\cbc128.obj: $(SRC_D)\crypto\modes\cbc128.c
	$(CC) /Fo$(OBJ_D)\cbc128.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\modes\cbc128.c

$(OBJ_D)\ctr128.obj: $(SRC_D)\crypto\modes\ctr128.c
	$(CC) /Fo$(OBJ_D)\ctr128.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\modes\ctr128.c

$(OBJ_D)\cfb128.obj: $(SRC_D)\crypto\modes\cfb128.c
	$(CC) /Fo$(OBJ_D)\cfb128.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\modes\cfb128.c

$(OBJ_D)\ofb128.obj: $(SRC_D)\crypto\modes\ofb128.c
	$(CC) /Fo$(OBJ_D)\ofb128.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\modes\ofb128.c

$(OBJ_D)\gcm128.obj: $(SRC_D)\crypto\modes\gcm128.c
	$(CC) /Fo$(OBJ_D)\gcm128.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\modes\gcm128.c

$(OBJ_D)\ccm128.obj: $(SRC_D)\crypto\modes\ccm128.c
	$(CC) /Fo$(OBJ_D)\ccm128.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\modes\ccm128.c

$(OBJ_D)\xts128.obj: $(SRC_D)\crypto\modes\xts128.c
	$(CC) /Fo$(OBJ_D)\xts128.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\modes\xts128.c

$(TMP_D)\ghash-x86.asm: crypto\modes\asm\ghash-x86.pl
	$(PERL) crypto\modes\asm\ghash-x86.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\ghash-x86.obj: $(TMP_D)\ghash-x86.asm
	$(ASM) -o $@ $(TMP_D)\ghash-x86.asm

$(OBJ_D)\cmac.obj: $(SRC_D)\crypto\cmac\cmac.c
	$(CC) /Fo$(OBJ_D)\cmac.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\cmac\cmac.c

$(OBJ_D)\bn_add.obj: $(SRC_D)\crypto\bn\bn_add.c
	$(CC) /Fo$(OBJ_D)\bn_add.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_add.c

$(OBJ_D)\bn_div.obj: $(SRC_D)\crypto\bn\bn_div.c
	$(CC) /Fo$(OBJ_D)\bn_div.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_div.c

$(OBJ_D)\bn_exp.obj: $(SRC_D)\crypto\bn\bn_exp.c
	$(CC) /Fo$(OBJ_D)\bn_exp.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_exp.c

$(OBJ_D)\bn_lib.obj: $(SRC_D)\crypto\bn\bn_lib.c
	$(CC) /Fo$(OBJ_D)\bn_lib.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_lib.c

$(OBJ_D)\bn_ctx.obj: $(SRC_D)\crypto\bn\bn_ctx.c
	$(CC) /Fo$(OBJ_D)\bn_ctx.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_ctx.c

$(OBJ_D)\bn_mul.obj: $(SRC_D)\crypto\bn\bn_mul.c
	$(CC) /Fo$(OBJ_D)\bn_mul.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_mul.c

$(OBJ_D)\bn_mod.obj: $(SRC_D)\crypto\bn\bn_mod.c
	$(CC) /Fo$(OBJ_D)\bn_mod.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_mod.c

$(OBJ_D)\bn_rand.obj: $(SRC_D)\crypto\bn\bn_rand.c
	$(CC) /Fo$(OBJ_D)\bn_rand.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_rand.c

$(OBJ_D)\bn_shift.obj: $(SRC_D)\crypto\bn\bn_shift.c
	$(CC) /Fo$(OBJ_D)\bn_shift.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_shift.c

$(OBJ_D)\bn_word.obj: $(SRC_D)\crypto\bn\bn_word.c
	$(CC) /Fo$(OBJ_D)\bn_word.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_word.c

$(OBJ_D)\bn_blind.obj: $(SRC_D)\crypto\bn\bn_blind.c
	$(CC) /Fo$(OBJ_D)\bn_blind.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_blind.c

$(OBJ_D)\bn_gcd.obj: $(SRC_D)\crypto\bn\bn_gcd.c
	$(CC) /Fo$(OBJ_D)\bn_gcd.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_gcd.c

$(OBJ_D)\bn_prime.obj: $(SRC_D)\crypto\bn\bn_prime.c
	$(CC) /Fo$(OBJ_D)\bn_prime.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_prime.c

$(OBJ_D)\bn_sqr.obj: $(SRC_D)\crypto\bn\bn_sqr.c
	$(CC) /Fo$(OBJ_D)\bn_sqr.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_sqr.c

$(TMP_D)\bn-586.asm: crypto\bn\asm\bn-586.pl
	$(PERL) crypto\bn\asm\bn-586.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\bn-586.obj: $(TMP_D)\bn-586.asm
	$(ASM) -o $@ $(TMP_D)\bn-586.asm

$(TMP_D)\co-586.asm: crypto\bn\asm\co-586.pl
	$(PERL) crypto\bn\asm\co-586.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\co-586.obj: $(TMP_D)\co-586.asm
	$(ASM) -o $@ $(TMP_D)\co-586.asm

$(TMP_D)\x86-mont.asm: crypto\bn\asm\x86-mont.pl
	$(PERL) crypto\bn\asm\x86-mont.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\x86-mont.obj: $(TMP_D)\x86-mont.asm
	$(ASM) -o $@ $(TMP_D)\x86-mont.asm

$(TMP_D)\x86-gf2m.asm: crypto\bn\asm\x86-gf2m.pl
	$(PERL) crypto\bn\asm\x86-gf2m.pl win32n $(CFLAG) >$@
	$(PERL) util\fipsas.pl . $@ norunasm $(CFLAG)

$(OBJ_D)\x86-gf2m.obj: $(TMP_D)\x86-gf2m.asm
	$(ASM) -o $@ $(TMP_D)\x86-gf2m.asm

$(OBJ_D)\bn_recp.obj: $(SRC_D)\crypto\bn\bn_recp.c
	$(CC) /Fo$(OBJ_D)\bn_recp.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_recp.c

$(OBJ_D)\bn_mont.obj: $(SRC_D)\crypto\bn\bn_mont.c
	$(CC) /Fo$(OBJ_D)\bn_mont.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_mont.c

$(OBJ_D)\bn_exp2.obj: $(SRC_D)\crypto\bn\bn_exp2.c
	$(CC) /Fo$(OBJ_D)\bn_exp2.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_exp2.c

$(OBJ_D)\bn_gf2m.obj: $(SRC_D)\crypto\bn\bn_gf2m.c
	$(CC) /Fo$(OBJ_D)\bn_gf2m.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_gf2m.c

$(OBJ_D)\bn_nist.obj: $(SRC_D)\crypto\bn\bn_nist.c
	$(CC) /Fo$(OBJ_D)\bn_nist.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_nist.c

$(OBJ_D)\bn_x931p.obj: $(SRC_D)\crypto\bn\bn_x931p.c
	$(CC) /Fo$(OBJ_D)\bn_x931p.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\bn\bn_x931p.c

$(OBJ_D)\rsa_eay.obj: $(SRC_D)\crypto\rsa\rsa_eay.c
	$(CC) /Fo$(OBJ_D)\rsa_eay.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_eay.c

$(OBJ_D)\rsa_gen.obj: $(SRC_D)\crypto\rsa\rsa_gen.c
	$(CC) /Fo$(OBJ_D)\rsa_gen.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_gen.c

$(OBJ_D)\rsa_pk1.obj: $(SRC_D)\crypto\rsa\rsa_pk1.c
	$(CC) /Fo$(OBJ_D)\rsa_pk1.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_pk1.c

$(OBJ_D)\rsa_ssl.obj: $(SRC_D)\crypto\rsa\rsa_ssl.c
	$(CC) /Fo$(OBJ_D)\rsa_ssl.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_ssl.c

$(OBJ_D)\rsa_none.obj: $(SRC_D)\crypto\rsa\rsa_none.c
	$(CC) /Fo$(OBJ_D)\rsa_none.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_none.c

$(OBJ_D)\rsa_oaep.obj: $(SRC_D)\crypto\rsa\rsa_oaep.c
	$(CC) /Fo$(OBJ_D)\rsa_oaep.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_oaep.c

$(OBJ_D)\rsa_pss.obj: $(SRC_D)\crypto\rsa\rsa_pss.c
	$(CC) /Fo$(OBJ_D)\rsa_pss.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_pss.c

$(OBJ_D)\rsa_x931.obj: $(SRC_D)\crypto\rsa\rsa_x931.c
	$(CC) /Fo$(OBJ_D)\rsa_x931.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_x931.c

$(OBJ_D)\rsa_crpt.obj: $(SRC_D)\crypto\rsa\rsa_crpt.c
	$(CC) /Fo$(OBJ_D)\rsa_crpt.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_crpt.c

$(OBJ_D)\rsa_x931g.obj: $(SRC_D)\crypto\rsa\rsa_x931g.c
	$(CC) /Fo$(OBJ_D)\rsa_x931g.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\rsa\rsa_x931g.c

$(OBJ_D)\dsa_gen.obj: $(SRC_D)\crypto\dsa\dsa_gen.c
	$(CC) /Fo$(OBJ_D)\dsa_gen.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\dsa\dsa_gen.c

$(OBJ_D)\dsa_key.obj: $(SRC_D)\crypto\dsa\dsa_key.c
	$(CC) /Fo$(OBJ_D)\dsa_key.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\dsa\dsa_key.c

$(OBJ_D)\dsa_ossl.obj: $(SRC_D)\crypto\dsa\dsa_ossl.c
	$(CC) /Fo$(OBJ_D)\dsa_ossl.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\dsa\dsa_ossl.c

$(OBJ_D)\dh_gen.obj: $(SRC_D)\crypto\dh\dh_gen.c
	$(CC) /Fo$(OBJ_D)\dh_gen.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\dh\dh_gen.c

$(OBJ_D)\dh_key.obj: $(SRC_D)\crypto\dh\dh_key.c
	$(CC) /Fo$(OBJ_D)\dh_key.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\dh\dh_key.c

$(OBJ_D)\dh_check.obj: $(SRC_D)\crypto\dh\dh_check.c
	$(CC) /Fo$(OBJ_D)\dh_check.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\dh\dh_check.c

$(OBJ_D)\ec_lib.obj: $(SRC_D)\crypto\ec\ec_lib.c
	$(CC) /Fo$(OBJ_D)\ec_lib.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ec_lib.c

$(OBJ_D)\ecp_smpl.obj: $(SRC_D)\crypto\ec\ecp_smpl.c
	$(CC) /Fo$(OBJ_D)\ecp_smpl.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ecp_smpl.c

$(OBJ_D)\ecp_mont.obj: $(SRC_D)\crypto\ec\ecp_mont.c
	$(CC) /Fo$(OBJ_D)\ecp_mont.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ecp_mont.c

$(OBJ_D)\ecp_nist.obj: $(SRC_D)\crypto\ec\ecp_nist.c
	$(CC) /Fo$(OBJ_D)\ecp_nist.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ecp_nist.c

$(OBJ_D)\ec_cvt.obj: $(SRC_D)\crypto\ec\ec_cvt.c
	$(CC) /Fo$(OBJ_D)\ec_cvt.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ec_cvt.c

$(OBJ_D)\ec_mult.obj: $(SRC_D)\crypto\ec\ec_mult.c
	$(CC) /Fo$(OBJ_D)\ec_mult.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ec_mult.c

$(OBJ_D)\ec_curve.obj: $(SRC_D)\crypto\ec\ec_curve.c
	$(CC) /Fo$(OBJ_D)\ec_curve.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ec_curve.c

$(OBJ_D)\ec_key.obj: $(SRC_D)\crypto\ec\ec_key.c
	$(CC) /Fo$(OBJ_D)\ec_key.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ec_key.c

$(OBJ_D)\ec2_smpl.obj: $(SRC_D)\crypto\ec\ec2_smpl.c
	$(CC) /Fo$(OBJ_D)\ec2_smpl.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ec2_smpl.c

$(OBJ_D)\ec2_mult.obj: $(SRC_D)\crypto\ec\ec2_mult.c
	$(CC) /Fo$(OBJ_D)\ec2_mult.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ec\ec2_mult.c

$(OBJ_D)\ech_ossl.obj: $(SRC_D)\crypto\ecdh\ech_ossl.c
	$(CC) /Fo$(OBJ_D)\ech_ossl.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ecdh\ech_ossl.c

$(OBJ_D)\ech_key.obj: $(SRC_D)\crypto\ecdh\ech_key.c
	$(CC) /Fo$(OBJ_D)\ech_key.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ecdh\ech_key.c

$(OBJ_D)\ecs_ossl.obj: $(SRC_D)\crypto\ecdsa\ecs_ossl.c
	$(CC) /Fo$(OBJ_D)\ecs_ossl.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\ecdsa\ecs_ossl.c

$(OBJ_D)\buf_str.obj: $(SRC_D)\crypto\buffer\buf_str.c
	$(CC) /Fo$(OBJ_D)\buf_str.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\buffer\buf_str.c

$(OBJ_D)\e_des3.obj: $(SRC_D)\crypto\evp\e_des3.c
	$(CC) /Fo$(OBJ_D)\e_des3.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\evp\e_des3.c

$(OBJ_D)\e_aes.obj: $(SRC_D)\crypto\evp\e_aes.c
	$(CC) /Fo$(OBJ_D)\e_aes.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\evp\e_aes.c

$(OBJ_D)\m_sha1.obj: $(SRC_D)\crypto\evp\m_sha1.c
	$(CC) /Fo$(OBJ_D)\m_sha1.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\evp\m_sha1.c

$(OBJ_D)\m_dss.obj: $(SRC_D)\crypto\evp\m_dss.c
	$(CC) /Fo$(OBJ_D)\m_dss.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\evp\m_dss.c

$(OBJ_D)\m_dss1.obj: $(SRC_D)\crypto\evp\m_dss1.c
	$(CC) /Fo$(OBJ_D)\m_dss1.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\evp\m_dss1.c

$(OBJ_D)\m_ecdsa.obj: $(SRC_D)\crypto\evp\m_ecdsa.c
	$(CC) /Fo$(OBJ_D)\m_ecdsa.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\evp\m_ecdsa.c

$(OBJ_D)\e_null.obj: $(SRC_D)\crypto\evp\e_null.c
	$(CC) /Fo$(OBJ_D)\e_null.obj  $(SHLIB_CFLAGS) -c $(SRC_D)\crypto\evp\e_null.c

$(OBJ_D)\$(CRYPTO).res: ms\version32.rc
	$(RSC) /fo"$(OBJ_D)\$(CRYPTO).res" /d CRYPTO ms\version32.rc

$(OBJ_D)\$(SSL).res: ms\version32.rc
	$(RSC) /fo"$(OBJ_D)\$(SSL).res" /d SSL ms\version32.rc

$(TEST_D)\fips_test_suite.exe: $(OBJ_D)\fips_test_suite.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_test_suite.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_test_suite.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_test_suite.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_test_suite.c: $(SRC_D)\fips\fips_test_suite.c
	$(CP) "$(SRC_D)\fips\fips_test_suite.c" "$(TMP_D)\fips_test_suite.c"

$(TEST_D)\fips_aesavs.exe: $(OBJ_D)\fips_aesavs.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_aesavs.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_aesavs.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_aesavs.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_aesavs.c: $(SRC_D)\fips\aes\fips_aesavs.c
	$(CP) "$(SRC_D)\fips\aes\fips_aesavs.c" "$(TMP_D)\fips_aesavs.c"

$(TEST_D)\fips_gcmtest.exe: $(OBJ_D)\fips_gcmtest.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_gcmtest.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_gcmtest.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_gcmtest.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_gcmtest.c: $(SRC_D)\fips\aes\fips_gcmtest.c
	$(CP) "$(SRC_D)\fips\aes\fips_gcmtest.c" "$(TMP_D)\fips_gcmtest.c"

$(TEST_D)\fips_cmactest.exe: $(OBJ_D)\fips_cmactest.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_cmactest.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_cmactest.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_cmactest.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_cmactest.c: $(SRC_D)\fips\cmac\fips_cmactest.c
	$(CP) "$(SRC_D)\fips\cmac\fips_cmactest.c" "$(TMP_D)\fips_cmactest.c"

$(TEST_D)\fips_desmovs.exe: $(OBJ_D)\fips_desmovs.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_desmovs.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_desmovs.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_desmovs.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_desmovs.c: $(SRC_D)\fips\des\fips_desmovs.c
	$(CP) "$(SRC_D)\fips\des\fips_desmovs.c" "$(TMP_D)\fips_desmovs.c"

$(TEST_D)\fips_dsatest.exe: $(OBJ_D)\fips_dsatest.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_dsatest.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_dsatest.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_dsatest.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_dsatest.c: $(SRC_D)\fips\dsa\fips_dsatest.c
	$(CP) "$(SRC_D)\fips\dsa\fips_dsatest.c" "$(TMP_D)\fips_dsatest.c"

$(TEST_D)\fips_dssvs.exe: $(OBJ_D)\fips_dssvs.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_dssvs.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_dssvs.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_dssvs.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_dssvs.c: $(SRC_D)\fips\dsa\fips_dssvs.c
	$(CP) "$(SRC_D)\fips\dsa\fips_dssvs.c" "$(TMP_D)\fips_dssvs.c"

$(TEST_D)\fips_dhvs.exe: $(OBJ_D)\fips_dhvs.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_dhvs.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_dhvs.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_dhvs.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_dhvs.c: $(SRC_D)\fips\dh\fips_dhvs.c
	$(CP) "$(SRC_D)\fips\dh\fips_dhvs.c" "$(TMP_D)\fips_dhvs.c"

$(TEST_D)\fips_ecdhvs.exe: $(OBJ_D)\fips_ecdhvs.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_ecdhvs.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_ecdhvs.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_ecdhvs.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_ecdhvs.c: $(SRC_D)\fips\ecdh\fips_ecdhvs.c
	$(CP) "$(SRC_D)\fips\ecdh\fips_ecdhvs.c" "$(TMP_D)\fips_ecdhvs.c"

$(TEST_D)\fips_ecdsavs.exe: $(OBJ_D)\fips_ecdsavs.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_ecdsavs.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_ecdsavs.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_ecdsavs.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_ecdsavs.c: $(SRC_D)\fips\ecdsa\fips_ecdsavs.c
	$(CP) "$(SRC_D)\fips\ecdsa\fips_ecdsavs.c" "$(TMP_D)\fips_ecdsavs.c"

$(TEST_D)\fips_hmactest.exe: $(OBJ_D)\fips_hmactest.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_hmactest.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_hmactest.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_hmactest.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_hmactest.c: $(SRC_D)\fips\hmac\fips_hmactest.c
	$(CP) "$(SRC_D)\fips\hmac\fips_hmactest.c" "$(TMP_D)\fips_hmactest.c"

$(TEST_D)\fips_randtest.exe: $(OBJ_D)\fips_randtest.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_randtest.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_randtest.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_randtest.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_randtest.c: $(SRC_D)\fips\rand\fips_randtest.c
	$(CP) "$(SRC_D)\fips\rand\fips_randtest.c" "$(TMP_D)\fips_randtest.c"

$(TEST_D)\fips_rngvs.exe: $(OBJ_D)\fips_rngvs.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_rngvs.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_rngvs.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_rngvs.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_rngvs.c: $(SRC_D)\fips\rand\fips_rngvs.c
	$(CP) "$(SRC_D)\fips\rand\fips_rngvs.c" "$(TMP_D)\fips_rngvs.c"

$(TEST_D)\fips_drbgvs.exe: $(OBJ_D)\fips_drbgvs.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_drbgvs.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_drbgvs.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_drbgvs.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_drbgvs.c: $(SRC_D)\fips\rand\fips_drbgvs.c
	$(CP) "$(SRC_D)\fips\rand\fips_drbgvs.c" "$(TMP_D)\fips_drbgvs.c"

$(TEST_D)\fips_rsavtest.exe: $(OBJ_D)\fips_rsavtest.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_rsavtest.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_rsavtest.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_rsavtest.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_rsavtest.c: $(SRC_D)\fips\rsa\fips_rsavtest.c
	$(CP) "$(SRC_D)\fips\rsa\fips_rsavtest.c" "$(TMP_D)\fips_rsavtest.c"

$(TEST_D)\fips_rsastest.exe: $(OBJ_D)\fips_rsastest.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_rsastest.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_rsastest.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_rsastest.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_rsastest.c: $(SRC_D)\fips\rsa\fips_rsastest.c
	$(CP) "$(SRC_D)\fips\rsa\fips_rsastest.c" "$(TMP_D)\fips_rsastest.c"

$(TEST_D)\fips_rsagtest.exe: $(OBJ_D)\fips_rsagtest.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_rsagtest.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_rsagtest.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_rsagtest.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_rsagtest.c: $(SRC_D)\fips\rsa\fips_rsagtest.c
	$(CP) "$(SRC_D)\fips\rsa\fips_rsagtest.c" "$(TMP_D)\fips_rsagtest.c"

$(TEST_D)\fips_shatest.exe: $(OBJ_D)\fips_shatest.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_shatest.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_shatest.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_shatest.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(TMP_D)\fips_shatest.c: $(SRC_D)\fips\sha\fips_shatest.c
	$(CP) "$(SRC_D)\fips\sha\fips_shatest.c" "$(TMP_D)\fips_shatest.c"

$(TEST_D)\fips_algvs.exe: $(OBJ_D)\fips_algvs.obj $(LIBS_DEP)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=
	SET FIPS_TARGET=$(TEST_D)\fips_algvs.exe
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(LFLAGS) /map /out:$(TEST_D)\fips_algvs.exe @<<
	$(APP_EX_OBJ) $(OBJ_D)\fips_algvs.obj $(OBJ_D)\fips_premain.obj $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(O_SSL): $(SSLOBJ)
	$(LINK) $(MLFLAGS) /out:$(O_SSL) /def:ms/SSLEAY32.def @<<
  $(SHLIB_EX_OBJ) $(SSLOBJ)  $(L_CRYPTO) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;2


$(O_CRYPTO): $(CRYPTOOBJ) $(O_FIPSCANISTER) $(PREMAIN_DSO_EXE)
	SET FIPS_LINK=$(LINK)
	SET FIPS_CC=$(CC)
	SET FIPS_CC_ARGS=/Fo$(OBJ_D)\fips_premain.obj $(SHLIB_CFLAGS) -c
	SET PREMAIN_DSO_EXE=$(PREMAIN_DSO_EXE)
	SET FIPS_SHA1_EXE=$(FIPS_SHA1_EXE)
	SET FIPS_TARGET=$(O_CRYPTO)
	SET FIPSLIB_D=$(FIPSLIB_D)
	$(FIPSLINK) $(MLFLAGS) /map  /base:$(BASEADDR) /out:$(O_CRYPTO) /def:ms/LIBEAY32.def @<<
  $(SHLIB_EX_OBJ) $(CRYPTOOBJ) $(O_FIPSCANISTER) $(EX_LIBS) $(OBJ_D)\fips_premain.obj 
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;2


$(O_FIPSCANISTER): $(OBJ_D)\fips_start.obj $(FIPSOBJ) $(OBJ_D)\fips_end.obj  $(FIPS_SHA1_EXE)
	$(PERL) ms\segrenam.pl $$a $(OBJ_D)\fips_start.obj
	$(PERL) ms\segrenam.pl $$b $(FIPSOBJ)
	$(PERL) ms\segrenam.pl $$c $(OBJ_D)\fips_end.obj
	$(MKLIB) /out:$(O_FIPSCANISTER) @<<
	$(OBJ_D)\fips_start.obj $(FIPSOBJ) $(OBJ_D)\fips_end.obj
<<
	$(FIPS_SHA1_EXE) $(O_FIPSCANISTER) > $(O_FIPSCANISTER).sha1
	$(PERL) util\copy.pl -stripcr fips\fips_premain.c $(LIB_D)\fips_premain.c
	$(CP) fips\fips_premain.c.sha1 $(LIB_D)\fips_premain.c.sha1

$(FIPS_SHA1_EXE): $(OBJ_D)\fips_standalone_sha1.obj $(OBJ_D)\sha1dgst.obj $(TMP_D)\sha1-586.obj $(TMP_D)\sha256-586.obj $(TMP_D)\sha512-586.obj 
  $(LINK) $(LFLAGS) /out:$(FIPS_SHA1_EXE) @<<
	$(OBJ_D)\fips_standalone_sha1.obj $(OBJ_D)\sha1dgst.obj $(TMP_D)\sha1-586.obj $(TMP_D)\sha256-586.obj $(TMP_D)\sha512-586.obj $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(PREMAIN_DSO_EXE): $(OBJ_D)\$(E_PREMAIN_DSO).obj $(CRYPTOOBJ) $(O_FIPSCANISTER) 
  $(LINK) $(LFLAGS) /out:$(PREMAIN_DSO_EXE) @<<
	$(OBJ_D)\$(E_PREMAIN_DSO).obj $(CRYPTOOBJ) $(O_FIPSCANISTER) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

$(BIN_D)\$(E_EXE).exe: $(E_OBJ) $(LIBS_DEP)
	$(LINK) $(LFLAGS) /out:$(BIN_D)\$(E_EXE).exe @<<
	$(APP_EX_OBJ) $(E_OBJ) $(L_LIBS) $(EX_LIBS)
<<
	IF EXIST $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;1

